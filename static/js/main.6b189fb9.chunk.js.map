{"version":3,"sources":["MainForm.js","App.js","reportWebVitals.js","index.js"],"names":["MainForm","useState","step","setstep","next","cur","console","log","Form","className","Group","controlId","Label","Control","type","name","placeholder","Jumbotron","fluid","Container","Button","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+OAuFeA,EApFE,WAEb,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcMC,EAAO,WACTD,GAAQ,SAAAE,GAAG,OAAIA,EAAM,MAezB,OAFAC,QAAQC,IAAIL,GAGR,8BACI,eAACM,EAAA,EAAD,CAAMC,UAAU,iBAAhB,UAEiB,IAATP,GACI,kCACI,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,qBAMvD,IAATd,GACI,kCACI,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAY,cAMzD,IAATd,GACI,kCACI,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAY,cAMrD,IAATd,GACI,kCACI,cAACe,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAACC,EAAA,EAAD,UACI,wDAjDzBjB,EAAO,OACN,EAGI,cAACkB,EAAA,EAAD,CAAQC,QAASjB,EAAjB,6BCfDkB,EARH,WACV,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCISc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCEdQ,IAASC,OAAO,cAAC,IAAD,UAAQ,cAAC,EAAD,MAAiBC,SAASC,eAAe,SAKjEZ,M","file":"static/js/main.6b189fb9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Form , Button , Jumbotron , Container} from \"react-bootstrap\";\r\n\r\nconst MainForm = () => {\r\n\r\n    const [step, setstep] = useState(0)\r\n    // const [user, setuser] = useState([{\r\n    //     email:\"\" , username:\"\" , work:\"\"\r\n    // }])\r\n\r\n    // let name , value;\r\n    // const inO = (e) => {\r\n    //     name = e.target.name;\r\n    //     value = e.target.value;\r\n\r\n    //     setuser({...user , [name] : value});\r\n    // } \r\n    // console.log(user);\r\n    \r\n    const next = () => {\r\n        setstep(cur => cur + 1);\r\n    }\r\n\r\n    const rendButton = () => {\r\n        if(step > 2) {\r\n            return undefined;\r\n        }else{\r\n            return(\r\n                <Button onClick={next}>Next Step</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    console.log(step);\r\n\r\n    return (\r\n        <div>\r\n            <Form className=\"container mt-5\">\r\n                {\r\n                    step === 0 && (\r\n                        <section>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  />\r\n                            </Form.Group>\r\n                        </section>\r\n                    )\r\n                }\r\n                {\r\n                    step === 1 && (\r\n                        <section>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"username\" placeholder=\"Name\"  />\r\n                            </Form.Group>\r\n                        </section>\r\n                    )\r\n                }\r\n                {\r\n                    step === 2 && (\r\n                        <section>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Work</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"work\" placeholder=\"Work\"  />\r\n                            </Form.Group>\r\n                        </section>\r\n                    )\r\n                }\r\n                {\r\n                    step === 3 && (\r\n                        <section>\r\n                            <Jumbotron fluid>\r\n                                <Container>\r\n                                    <h1>Congratulations!</h1>\r\n                                </Container>\r\n                            </Jumbotron>\r\n                        </section>\r\n                    )\r\n                }\r\n                {\r\n                    rendButton()\r\n                }\r\n            </Form> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainForm;","import React from 'react';\nimport \"./App.css\";\nimport MainForm from './MainForm';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainForm />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}